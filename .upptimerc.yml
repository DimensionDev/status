# Change these first
owner: DimensionDev # Your GitHub organization or username, where this repository lives
repo: status # The name of this repository

sites:
- name: mask.io
  url: https://mask.io
- name: Maskbook UnlockProtocol plugin server
  url: https://unlock.r2d2.to
# Mastodon Instances
- name: mastodon.cloud
  url: https://mastodon.cloud/health
  __dangerous__body_degraded_if_text_missing: "OK"
- name: mstdn.jp
  url: https://mstdn.jp/health
  __dangerous__body_degraded_if_text_missing: "OK"
# RPC server used by Mask products
- name: RPC server - Infura Mainnet
  url: $INFURA_MAINNET_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Quiknode Mainnet
  url: $QUIKNODE_MAINNET_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Binance BSC
  url: $BINANCE_BSC_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Infura Matic Mainnet
  url: $INFURA_MATIC_MAINNET_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Arbitrum
  url: $ARBITRUM_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "0x"
  assignees:
    - frontendgatekeeper
- name: RPC server - xDai
  url: $XDAI_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Avalanche
  url: $AVALANCHE_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Celo
  url: $CELO_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Fantom
  url: $FANTOM_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Aurora
  url: $AURORA_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Conflux
  url: $CONFLUX_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "0x"
  assignees:
    - frontendgatekeeper
- name: RPC server - Harmony
  url: $HARMONY_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "0x"
  assignees:
    - frontendgatekeeper
- name: RPC server - Astar
  url: $ASTAR_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
- name: RPC server - Optimism
  url: $OPTIMISM_RPC_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":42}'
  __dangerous__body_degraded_if_text_missing: "true"
  assignees:
    - frontendgatekeeper
# API server used by Mask products
- name: API - Rabby Token
  url: $RABBY_TOKEN_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Astar Gas Price
  url: $ASTAR_GAS_PRICE_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Chainbase NFT
  url: $CHAINBASE_NFT_API_URL
  method: GET
  headers:
    - "X-API-KEY: $CHAINBASE_NFT_API_X_API_KEY"
  assignees:
    - frontendgatekeeper
- name: API - CoinMarketCap Trending Widget
  url: $COINMARKETCAP_TRENDING_WIDGET_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - CoinMarketCap Trending
  url: $COINMARKETCAP_TRENDING_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - CoinGecko Trending
  url: $COINGECKO_TRENDING_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Debank Gas Price Dict
  url: $DEBANK_GAS_PRICE_DICT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Debank NFT
  url: $DEBANK_NFT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Gem NFT
  url: $GEM_NFT_API_URL
  method: GET
  headers:
    - "x-api-key: $GEM_NFT_API_X_API_KEY"
  assignees:
    - frontendgatekeeper
- name: API - Gopluslabs Security
  url: $GOPLUSLABS_SECURITY_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Looksrare NFT
  url: $LOOKSRARE_NFT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Metaswap Gas Price
  url: $METASWAP_GAS_PRICE_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Minds SNS
  url: $MINDS_SNS_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - NFTScan EVM NFT
  url: $NFTSCAN_EVM_NFT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - NFTScan Solana NFT
  url: $NFTSCAN_SOLANA_NFT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - NFTScan Trending
  url: $NFTSCAN_TRENDING_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - NFTScan Trending
  url: $NFTSCAN_TRENDING_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Rabby NFT
  url: $RABBY_NFT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Rarible NFT
  url: $RARIBLE_NFT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - X2Y2 NFT
  url: $X2Y2_NFT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Zora NFT
  url: $ZORA_NFT_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Twitter Identity
  url: $TWITTER_IDENTITY_API_URL
  method: GET
  assignees:
    - frontendgatekeeper
- name: API - Lens
  url: $LENS_API_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"query":"query Query { ping }"}'
  __dangerous__body_degraded_if_text_missing: "pong"
  assignees:
    - frontendgatekeeper
- name: API - RSS3 Domain
  url: $RSS3_DOMAIN_API_URL
  method: POST
  headers:
    - "Content-Type: application/json"
  body: '{"query":"query Query { ping }"}'
  __dangerous__body_degraded_if_text_missing: "pong"
  assignees:
    - frontendgatekeeper

# Assets
- name: Assets - Cloudflare Images
  url: $CLOUDFLARE_IMAGES_ASSETS_IMAGE_URL
  method: GET
  assignees:
    - frontendgatekeeper

status-website:
  # Add your custom domain name, or remove the `cname` line if you don't have a domain
  # Uncomment the `baseUrl` line if you don't have a custom domain and add your repo name there
  cname: status.mask.io
  # baseUrl: /your-repo-name
  logoUrl: https://raw.githubusercontent.com/upptime/upptime.js.org/master/static/img/icon.svg
  name: Mask.io Service Status
  introTitle: "**Upptime** is the open-source uptime monitor and status page, powered entirely by GitHub."
  introMessage: This is a sample status page which uses **real-time** data from our [GitHub repository](https://github.com/upptime/upptime). No server required â€” just GitHub Actions, Issues, and Pages. [**Get your own for free**](https://github.com/upptime/upptime)
  navbar:
    - title: Status
      href: /
    - title: GitHub
      href: https://github.com/$OWNER/$REPO

# Upptime also supports notifications, assigning issues, and more
# See https://upptime.js.org/docs/configuration
